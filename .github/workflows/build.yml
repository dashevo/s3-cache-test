name: Build image

on:
  workflow_dispatch:

jobs:
  build:
    name: Run build
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: s3-dockerfile

    - name: Checkout platform repo
      uses: actions/checkout@v3
      with:
        repository: dashpay/platform
        path: platform
        ref: v0.25-dev

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: strophy/buildbase
        tags: |
          type=raw,value=latest-dev
        flavor: |
          latest=false

    - name: Install build tools
      run: sudo apt install -y build-essential clang libssl-dev pkg-config

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        target: wasm32-unknown-unknown

    - name: Setup Node.JS
      uses: actions/setup-node@v3
      with:
        node-version: "16"

    - name: Set up QEMU to run multi-arch builds
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker BuildX
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.10.4
        install: true

    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Enable corepack
      working-directory: ${{ github.workspace }}/platform
      run: corepack enable

    - name: Install dependencies
      working-directory: ${{ github.workspace }}/platform
      run: yarn install

    - name: Build packages
      run: yarn build --filter "+@dashevo/drive"
      working-directory: ${{ github.workspace }}/platform
      env:
        CARGO_BUILD_PROFILE: release

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: ${{ github.workspace }}/platform
        push: false
        file: ${{ github.workspace }}/s3-dockerfile/Dockerfile
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        # platforms: linux/amd64,linux/arm64
        platforms: linux/amd64
        cache-from: type=s3,region=eu-west-1,bucket=core-runner-cache
        cache-to: type=s3,region=eu-west-1,bucket=core-runner-cache

    - name: Setup tmate session
      # if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
